cmake_minimum_required(VERSION 2.8)

message("Cmake Version: " ${CMAKE_VERSION})
message("System Name: " ${CMAKE_SYSTEM_NAME})
message("System Version: " ${CMAKE_SYSTEM_VERSION})
message("System Processer: " ${CMAKE_SYSTEM_PROCESSOR})

aux_source_directory(. SRC_LIST)
include_directories(.)
set(CMAKE_CXX_FLAGS "-g -Wall -O3 -fPIC -std=c++11")

#set(TARGET_SYSTEM_NAME Linux)
#set(TARGET_SYSTEM_NAME Android)
#set(TARGET_SYSTEM_NAME Windows)

if(${TARGET_SYSTEM_NAME} STREQUAL Linux)
	message("Linux平台")
	set(LIBRARY_OUTPUT_PATH /usr/local/lib)
	set(EXECUTABLE_OUTPUT_PATH /usr/local/bin)
elseif(${TARGET_SYSTEM_NAME} STREQUAL Android)
	message("Android平台")
	add_definitions(-D__STDC_INT64__)
	set(CMAKE_C_COMPILER /usr/bin/arm-linux-androideabi-gcc)
	set(CMAKE_CXX_COMPILER /usr/bin/arm-linux-androideabi-g++)
	set(LIBRARY_OUTPUT_PATH /usr/arm-linux-androideabi/lib)
	set(EXECUTABLE_OUTPUT_PATH /usr/arm-linux-androideabi/bin)
	#set(CMAKE_C_COMPILER /usr/arm-linux-androideabi/bin/gcc)
	#set(CMAKE_CXX_COMPILER /usr/arm-linux-androideabi/bin/g++)

	#include_directories($ENV{NDK_ROOT}/sources/cxx-stl/stlport/stlport)
	include_directories($ENV{NDK_ROOT}/sources/cxx-stl/gnu-libstdc++/4.8/include)
	include_directories($ENV{NDK_ROOT}/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include)
	include_directories($ENV{NDK_ROOT}/sources/android/native_app_glue)
	include_directories($ENV{NDK_ROOT}/platforms/android-19/arch-arm/usr/include)
	link_directories($ENV{NDK_ROOT}/platforms/android-19/arch-arm/usr/lib)
elseif(${TARGET_SYSTEM_NAME} STREQUAL Windows)
	message("Windows平台")
	#set(CMAKE_C_COMPILER /usr/bin/x86_64-w64-mingw32-gcc)
	#set(CMAKE_CXX_COMPILER /usr/bin/x86_64-w64-mingw32-g++)
	set(CMAKE_C_COMPILER /usr/bin/x86_64-w64-mingw32-gcc)
	set(CMAKE_CXX_COMPILER /usr/bin/x86_64-w64-mingw32-g++)
else()
	message(FATAL_ERROR "未知的平台" ${TARGET_SYSTEM_NAME})
endif()

message("Binary directory: " ${PROJECT_BINARY_DIR})

#add_library(${PROJECT_NAME} SHARED ${SRC_LIST})
#add_executable(${PROJECT_NAME} ${SRC_LIST})
